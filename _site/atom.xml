<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Blog</title>
 <link href="http://praba230890.github.io/atom.xml" rel="self"/>
 <link href="http://praba230890.github.io/"/>
 <updated>2015-10-03T18:20:45+05:30</updated>
 <id>http://praba230890.github.io</id>
 <author>
   <name>Prabakaran Santhanam</name>
   <email>praba230890@gmail.com</email>
 </author>

 
 <entry>
   <title>Token based, authenticated REST API's with the help of Django Rest Framework (DRF)</title>
   <link href="http://praba230890.github.io/2015/09/02/token-based-authentication-django-rest-api/"/>
   <updated>2015-09-02T00:00:00+05:30</updated>
   <id>http://praba230890.github.io/2015/09/02/token-based-authentication-django-rest-api</id>
   <content type="html">&lt;h3 id=&quot;add-restframework-and-restframeworkauthtoken-to-installed-apps-in-django-project-settings-file&quot;&gt;Add rest_framework and rest_framework.authtoken to installed apps in Django project settings file&lt;/h3&gt;

&lt;p&gt;First install DRF&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip install djangorestframework&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;then add the DRF to installed apps,&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#    &amp;#39;django_admin_bootstrapped&amp;#39;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;django.contrib.auth&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;django.contrib.contenttypes&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;django.contrib.sessions&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;django.contrib.messages&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;django.contrib.staticfiles&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;rest_framework&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;rest_framework.authtoken&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;.....&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and run migrations for the DRF,&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py makemigrations
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python manage.py migrate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;token-generation-code-for-each-new-user-to-be-created-in-relevent-models-file&quot;&gt;Token generation code for each new user to be created (in relevent models file)&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# models.py&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.conf&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.db.models.signals&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_save&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.dispatch&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receiver&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.authtoken.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@receiver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AUTH_USER_MODEL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;for already existing users, the token can be generated by running the below snippet in django shell&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# python manage.py shell&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.authtoken.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_or_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;adding-api-endpoint-for-getting-tokens&quot;&gt;Adding API endpoint for getting tokens&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# urls.py&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.authtoken&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;myapp.views&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyView&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;urlpatterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;^get/my/view/$&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;#39;^token/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obtain_auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;adding-an-api-endpoint-view-under-token-authentication&quot;&gt;Adding an API endpoint view under token authentication&lt;/h3&gt;

&lt;p&gt;For class based views&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# views.py&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonResponse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.authentication&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TokenAuthentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BasicAuthentication&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.permissions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IsAuthenticated&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.views&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APIView&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;APIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot; subclass from APIView inorder to use the token based authentication provided by DRF&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;authentication_classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TokenAuthentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;permission_classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsAuthenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;My View&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For function based views&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;#views.py&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;django.http&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonResponse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.decorators&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authentication_classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permission_classes&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.authentication&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TokenAuthentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BasicAuthentication&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.permissions&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IsAuthenticated&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rest_framework.views&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;APIView&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@api_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@authentication_classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TokenAuthentication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@permission_classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsAuthenticated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;My View&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;testing&quot;&gt;testing&lt;/h3&gt;

&lt;p&gt;Once everything has been done, create a user and test if everything works fine.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl -X POST -d &lt;span class=&quot;s1&quot;&gt;&amp;#39;username=username&amp;amp;password=password&amp;#39;&lt;/span&gt; localhost:8000/token/
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;token&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;6874e18a8e754df76ab140744c9310142e6f8943&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;Authorization: Token 6874e18a8e754df76ab140744c9310142e6f8943&amp;quot;&lt;/span&gt; http://localhost:8000/get/my/view/
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Data&amp;#39;&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;&amp;#39;My View&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl http://localhost:8000/get/my/view/
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;detail&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;Authentication credentials were not provided.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Configuing Automatic PostgreSQL Database Backup Using Cron</title>
   <link href="http://praba230890.github.io/2015/07/28/configuing-automatic-postgresql/"/>
   <updated>2015-07-28T12:17:00+05:30</updated>
   <id>http://praba230890.github.io/2015/07/28/configuing-automatic-postgresql</id>
   <content type="html">First, use crontab,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ crontab -e&lt;/blockquote&gt;&lt;br /&gt;add the following lines at the end of the file &lt;br /&gt;&lt;pre style=&quot;background-image: URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif); background: #f0f0f0; border: 1px dashed #CCCCCC; color: black; font-family: arial; font-size: 12px; height: auto; line-height: 20px; overflow: auto; padding: 0px; text-align: left; width: 99%;&quot;&gt;&lt;code style=&quot;color: black; word-wrap: normal;&quot;&gt; ####backup toppers sb everyday##########  &lt;br /&gt;   &lt;br /&gt; # m h dom mon dow             command   &lt;br /&gt;   &lt;br /&gt;   0 0  *    *   *   cd /home/user/db_backup &amp;amp;&amp;amp; ./backup &amp;gt; /dev/null 2&amp;gt;&amp;amp;1  &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;where,&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background-image: URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif); background: #f0f0f0; border: 1px dashed #CCCCCC; color: black; font-family: arial; font-size: 12px; height: auto; line-height: 20px; overflow: auto; padding: 0px; text-align: left; width: 99%;&quot;&gt;&lt;code style=&quot;color: black; word-wrap: normal;&quot;&gt; # m h dom mon dow  command   &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;is the format.&lt;br /&gt;&lt;br /&gt;m - Minute (0-59)&lt;br /&gt;h - Hour (0-23)&lt;br /&gt;dom - Day of Month (1-31)&lt;br /&gt;mon - Month (1-12)&lt;br /&gt;dow - Day of week (0-6, starting with Sunday)&lt;br /&gt;&lt;br /&gt;and the command is the shell command that you want the cron to execute at the specified time.&lt;br /&gt;&lt;br /&gt;Here in the above example I've asked cron to execute the command&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background-image: URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif); background: #f0f0f0; border: 1px dashed #CCCCCC; color: black; font-family: arial; font-size: 12px; height: auto; line-height: 20px; overflow: auto; padding: 0px; text-align: left; width: 99%;&quot;&gt;&lt;code style=&quot;color: black; word-wrap: normal;&quot;&gt; cd /home/user/db_backup &amp;amp;&amp;amp; ./backup &amp;gt; /dev/null 2&amp;gt;&amp;amp;1  &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;at every dom, mon and dow. That is what for the '*' is used. So, as everyday starts, cron will run the command I've specified.&lt;br /&gt;&lt;br /&gt;In the above command in cron, I've asked cron to execute a shell script named backup. I've done this in order to declare some variables or settings needed for backing up the database without complicating the crontab. It will also be easy to maintain different shell scripts for backing up different databases with respective configurations.&lt;br /&gt;&lt;br /&gt;In backup file,&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ nano /home/user/db_backup/backup&lt;/blockquote&gt;&lt;pre style=&quot;background-image: URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif); background: #f0f0f0; border: 1px dashed #CCCCCC; color: black; font-family: arial; font-size: 12px; height: auto; line-height: 20px; overflow: auto; padding: 0px; text-align: left; width: 99%;&quot;&gt;&lt;code style=&quot;color: black; word-wrap: normal;&quot;&gt; #! /bin/bash  &lt;br /&gt; FILE=&quot;/home/user/db_backup/backup_$(date +%Y%m%d_%H%M%S).pgsql&quot;  &lt;br /&gt; pg_dump --no-password database_name &amp;gt; $FILE  &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;I've created a file name and stored it into FILE variable, then dumped the database into a new file with name FILE. If you are using openscg or something, and if that specific environment is not added in the current environment, then add the following line next to shebang,&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;background-image: URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif); background: #f0f0f0; border: 1px dashed #CCCCCC; color: black; font-family: arial; font-size: 12px; height: auto; line-height: 20px; overflow: auto; padding: 0px; text-align: left; width: 99%;&quot;&gt;&lt;code style=&quot;color: black; word-wrap: normal;&quot;&gt; source /opt/postgres/9.1/pg91-openscg.env # for openscg  &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;But, the above setup will end with an error message,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;span style=&quot;color: red;&quot;&gt;pg_dump: [archiver (db)] connection to database 'database_name' failed: fe_sendauth: no password supplied&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: red;&quot;&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;br /&gt;as there should be a password supplied in order to authenticate a user to back up the database. As we are automating the backup we can't (I'm not sure here) enter the password interactively every time. So, we've to supply the password in some implicit way. Postgresql gives us an option in the form of a .pgpass file. &lt;br /&gt;&lt;br /&gt;.pgpass file should be created in home directory and it should contain the following details,&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ nano ~/.pgpass&lt;/blockquote&gt;&lt;pre style=&quot;background-image: URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif); background: #f0f0f0; border: 1px dashed #CCCCCC; color: black; font-family: arial; font-size: 12px; height: auto; line-height: 20px; overflow: auto; padding: 0px; text-align: left; width: 99%;&quot;&gt;&lt;code style=&quot;color: black; word-wrap: normal;&quot;&gt; hostname:port:database:username:password  &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;now restart the postgresql and check if the backup works without a password by executing the backup file.&lt;br /&gt;&lt;br /&gt;$ chmod +x /home/user/db_backup/backup&amp;nbsp; # making 'backup' executable&lt;br /&gt;$ /home/user/db_backup/backup&lt;br /&gt;&lt;br /&gt;This will backup a database in the db_backup directory or any other directory you've specified in backup script file with current date and time. </content>
 </entry>
 
 <entry>
   <title>Creating symbolic links without "too many levels of symbolic links" error</title>
   <link href="http://praba230890.github.io/2015/07/25/creating-symbolic-links-without-too/"/>
   <updated>2015-07-25T13:44:00+05:30</updated>
   <id>http://praba230890.github.io/2015/07/25/creating-symbolic-links-without-too</id>
   <content type="html">Lets create a shell script named 'what' with a single line, no! two lines with shebang included.&lt;br /&gt;&lt;br /&gt;&lt;pre  style=&quot;font-family:arial;font-size:12px;border:1px dashed #CCCCCC;width:99%;height:auto;overflow:auto;background:#f0f0f0;;background-image:URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif);padding:0px;color:#000000;text-align:left;line-height:20px;&quot;&gt;&lt;code style=&quot;color:#000000;word-wrap:normal;&quot;&gt;1:  #!/bin/bash   &lt;br /&gt;2:  echo &quot;nothing!&quot;  &lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;and save the file.&lt;br /&gt;&lt;br /&gt;Now, make it executable.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ chmod +x what&lt;/blockquote&gt;&lt;br /&gt;then create a symbolic link for it in bin or any other directory that is in your PATH variable.&lt;br /&gt;&lt;br /&gt;[&lt;br /&gt;&amp;nbsp; to check the path just echo it,&lt;br /&gt;&amp;nbsp; $ echo $PATH&lt;br /&gt;]&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ ln -s /home/user/what /bin/what&amp;nbsp;&lt;/blockquote&gt;&lt;br /&gt;here, you could notice that the absolute path of the file to be symlinked is used with 'ln'. It would be sometimes tempting to use relative path or you might feel lazy to type in full path. Nevertheless, always use absolute path while symlinking. If done with relative path, here for example. While doing,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ ln -s what /bin/what &lt;/blockquote&gt;&lt;br /&gt;then, 'what' would be symlinked to /bin/what. i,e I can now run 'what' script from anywhere in my system just like we use 'cd', 'ls' and so. Now when I try to execute 'what', the symlink (/bin/what ) will again point to 'what' (the command) and again it will go run the symlink /bin/what and again from symlink it will point to command 'what' and the cycle continues. This will be indicated as error message in shell as,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;zsh: too many levels of symbolic links: what&lt;/blockquote&gt;</content>
 </entry>
 
 <entry>
   <title>With Forth - 1</title>
   <link href="http://praba230890.github.io/2015/06/01/with-forth-1/"/>
   <updated>2015-06-01T18:58:00+05:30</updated>
   <id>http://praba230890.github.io/2015/06/01/with-forth-1</id>
   <content type="html">&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-HIBUI6gB1C0/VWxjpj8MBoI/AAAAAAAAAyM/Mg8Yx3RK0tk/s1600/Screenshot%2Bfrom%2B2015-06-01%2B19%253A21%253A30.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;108&quot; src=&quot;http://4.bp.blogspot.com/-HIBUI6gB1C0/VWxjpj8MBoI/AAAAAAAAAyM/Mg8Yx3RK0tk/s320/Screenshot%2Bfrom%2B2015-06-01%2B19%253A21%253A30.png&quot; width=&quot;320&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;I've started learning the Forth programming language. If you are about to learn Forth, then pay attention when they say &quot;It's a stack based programming language&quot;. At first, I thought this as some sort of technical shit boasting out the implementation of Forth or something as I'm a low life programmer. But after fiddling with it for a while (thanks to the &quot;Implicit Data Passing&quot; section of &lt;a href=&quot;http://thinking-forth.sourceforge.net/&quot; target=&quot;_blank&quot;&gt;Thinking Forth by Leo Brodie&lt;/a&gt;) I finally understood what stack based programming is and now I've written my first working program in Forth which I was trying for the past few hours: a function to sum two numbers.&lt;br /&gt;&lt;br /&gt;: ADD + ;&lt;br /&gt;5 10 ADD CR .&lt;br /&gt;&lt;br /&gt;Now, this stack based programming is exciting (I'm yet to know thier pros and cons). Here, in the above two lines of code, I'm assigning the '+' operator to the word 'ADD'. Then in the next line I'm adding the numbers 5 and 10 then printing them on the screen as the word 'ADD' means '+'. The second line of code is&amp;nbsp; equivalent to &lt;br /&gt;&lt;br /&gt;5 10 + CR .&lt;br /&gt;&lt;br /&gt;where 'CR' is carriage return and '.' is used to print the output value to screen. So, don't worry about 'CR' and '.'.&lt;br /&gt;&lt;br /&gt;What I understood from the above: 5 is first stored (pushed) in to the stack and&amp;nbsp; then 10 is stored (pushed) above 5. With Last In First Out LIFO 'ADD' which&amp;nbsp; translates to '+' adds the last two values (by popping them out) of the stack and&amp;nbsp; puts (pushes) the output on the top of the stack. So, here we would be having 15&amp;nbsp; at the top of the stack which is printed out to us by '.' operator.&lt;br /&gt;&lt;br /&gt;Now, I wanted to show how this program works to my friends by summing a pair of integers. But, it was painfull (&amp;amp; not so cool) to type 'CR .' at the&amp;nbsp; end of each function call to print the output of the function 'ADD' each time. Then&amp;nbsp; the below lines from &lt;a href=&quot;http://thinking-forth.sourceforge.net/&quot; target=&quot;_blank&quot;&gt;Thinking Forth&lt;/a&gt;, by Leo Brodie, flashed into my brain (which won't happen very often),&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;The smallest atom of a Forth program is not a module or a subroutine or a&amp;nbsp; procedure, but a “word.”&lt;/blockquote&gt;&lt;br /&gt;and&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;Everything in Forth is a word.&lt;/blockquote&gt;&lt;br /&gt;So, here '+' should be a word, 'CR' should be a word and '.' should be a word too. And in Forth we can group together any number of words and assign it to a word.&lt;br /&gt;&lt;br /&gt;: ADD + CR . ;&lt;br /&gt;5 10 ADD&lt;br /&gt;&lt;br /&gt;This is not only cool, but seems powerful to me. Now, I'm getting excited to&amp;nbsp; further dive into Forth. &lt;br /&gt;&lt;br /&gt;Also, some of my friends argued that the below piece of code won't qualify for a function to which I wrote the below code, a function to sum four numbers.&lt;br /&gt;&lt;br /&gt;: 4add + + +&amp;nbsp; cr . ;&lt;br /&gt;9 8 1 2 4add&lt;br /&gt;&lt;br /&gt;Which outputs 10&lt;br /&gt;&lt;br /&gt;</content>
 </entry>
 
 <entry>
   <title>Installing and using a different Python distribution of our choice in shared hosting - server</title>
   <link href="http://praba230890.github.io/2015/04/03/installing-and-using-different-python/"/>
   <updated>2015-04-03T16:26:00+05:30</updated>
   <id>http://praba230890.github.io/2015/04/03/installing-and-using-different-python</id>
   <content type="html">Every step below need to be done on server through ssh. So, if you don't have an ssh access to your server then contact your service provider to activate it. &lt;br /&gt;&lt;br /&gt;I hope you selected a Python version to install already. If no then do select one based on your needs and download that particular Python distribution source code from &lt;a href=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot;&gt;Python official site&lt;/a&gt; using wget or curl directly into your server. If you don't have the above tools to download then download the source in your local system and use SFTP or SCP or by any other means and put them in your server.&lt;br /&gt;&lt;br /&gt;Here I'm downloading the Python 2.7.8&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ wget https://www.python.org/ftp/python/2.7.8/Python-2.7.8.tgz&lt;/blockquote&gt;&lt;br /&gt;Then unzip the file&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ tar -zxvf Python-2.7.8.tgz&amp;nbsp;&lt;/blockquote&gt;&lt;br /&gt;The above command will unzip the source code into a directory named Python-2.7.8. Now going ahead into the source code directory,&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;br /&gt;$ cd Python-2.7.1&lt;br /&gt;~/Python-2.7.8$ &lt;/blockquote&gt;&lt;br /&gt;create a directory where you want your Python to be installed.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;~/Python-2.7.8$ mkdir ~/.localpython&lt;/blockquote&gt;&lt;br /&gt;Now we are ready to install our new Python distribution.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Installing:&lt;/b&gt;&lt;br /&gt;Lets configure the Python to install in our custom path by passing our custom installation path through command line argument 'prefix'.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;~/Python-2.7.8$ ./configure --prefix=/home/user/.localpython&lt;/blockquote&gt;&lt;br /&gt;In the above command replace the user with your user name or replace the whole prefix path with the installation path of your choice.&lt;br /&gt;&lt;br /&gt;Then run make,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;~/Python-2.7.8$ make&lt;/blockquote&gt;&lt;br /&gt;Skip this section if you already have 'make' installed in your server [most of the case]:&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;If you don't have 'make' already installed(only for deb based systems), then you could install a local version of it.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;Download it from &lt;a href=&quot;http://packages.ubuntu.com/trusty/make&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;Then&amp;nbsp; create a directory to install make in local environment&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;$ mkdir ~/.localmake&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;Then install the make from downloaded deb file as&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;&lt;br /&gt;$ dpkg-deb -x make.deb /home/user/.localmake&lt;br /&gt;&lt;br /&gt;It will install the make application inside the ~/.localmake and now you could use this make for our Python build by calling the make as,&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #4c1130;&quot;&gt;$ /home/user/.localmake/usr/bin/make &lt;/span&gt;&lt;/blockquote&gt;&lt;br /&gt;Then finally, installation:&lt;br /&gt;&lt;br /&gt;~/Python-2.7.8$ make install&lt;br /&gt;&lt;br /&gt;[ ~/Python-2.7.8$ /home/user/.localmake/usr/bin/make install ]&amp;nbsp; #for users with local make&lt;br /&gt;&lt;br /&gt;Now, we can check our new Python distribution by running&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;~/Python-2.7.8$ /home/user/.localpython/bin/python&lt;br /&gt;Python 2.7.8 (default, Apr&amp;nbsp; 3 2015, 15:18:55) &lt;br /&gt;[GCC 4.8.2] on linux2&lt;br /&gt;Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt;&amp;nbsp;&lt;/blockquote&gt;&lt;br /&gt;The above command will open up our installed Python distribution which it will print in the first line [version].&lt;br /&gt;&lt;br /&gt;We have successfully installed our required Python version/distribution. Yet, we have to solve another issue.&lt;br /&gt;&lt;br /&gt;Every time we wanted to use our Python version, we need to call it with the full path of the binary, as the default 'python' command would open the default Python version that was installed system wide. In most cases, we are about to run Python applications by just calling the command 'python' and it's the default method for most programs too. So, lets solve it by creating a symlink for python for our installed version.&lt;br /&gt;&lt;br /&gt;create a local bin directory,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ mkdir ~/bin&lt;/blockquote&gt;&lt;br /&gt;Then create symlink ,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ ln -s ~/.localpython/bin/python ~/bin/python&lt;br /&gt;$ ln -s ~/.localpython/bin/python-config ~/bin/python-config&lt;/blockquote&gt;&lt;br /&gt;Also, some of the python programs call python with 'python2.7' command, so lets create a symlink for it too.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ ln -s ~/.localpython/bin/python2.7 ~/bin/python2.7&lt;br /&gt;$ ln -s ~/.localpython/bin/python2.7-config ~/bin/python2.7-config&lt;/blockquote&gt;&lt;br /&gt;Now, add ~/bin to our PATH,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ export PATH=~/bin:$PATH &lt;/blockquote&gt;&lt;br /&gt;Then test if everything works fine by opening Python interpreter.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ python&lt;br /&gt;Python 2.7.8 (default, Apr&amp;nbsp; 3 2015, 15:18:55) &lt;br /&gt;[GCC 4.8.2] on linux2&lt;br /&gt;Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/blockquote&gt;&lt;br /&gt;and&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ python2.7&lt;br /&gt;Python 2.7.8 (default, Apr&amp;nbsp; 3 2015, 15:18:55) &lt;br /&gt;[GCC 4.8.2] on linux2&lt;br /&gt;Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/blockquote&gt;&lt;br /&gt;or by issuing the command,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ which python&lt;br /&gt;&amp;nbsp;/home/user/bin/python&lt;/blockquote&gt;&lt;br /&gt;Add this path permanently by putting it into ~/.bashrc file so that it will work on every further sessions.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ nano .bashrc&lt;/blockquote&gt;&lt;br /&gt;and add the below line and save it with CTRL+x.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ export PATH=~/bin:$PATH&lt;/blockquote&gt;&lt;br /&gt;Finally activate the modified .bashrc file&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ source ~/.bashrc&lt;/blockquote&gt;&lt;br /&gt;Installing pip:&lt;br /&gt;Download the Python script get-pip.py and run it.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ wget https://bootstrap.pypa.io/get-pip.py&lt;br /&gt;$ python get-pip.py&lt;/blockquote&gt;&lt;br /&gt;The above script will automatically download and install pip and setup tools for us. Once it has been installed you could install whatever the packages you need using pip. Before that let's check,&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;$ pip freeze&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;igtranslator-activator-icon&quot; style=&quot;background-image: url(&amp;quot;resource://jid1-dgnibwqga0sibw-at-jetpack/igtranslator/data/content_script/icon.png&amp;quot;); display: block; left: 517px; top: 655px;&quot; title=&quot;Click to Show Translation&quot;&gt;&lt;/div&gt;&lt;iframe class=&quot;igtranslator-iframe&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;about:blank&quot; style=&quot;display: none; height: 0px; width: 0px;&quot;&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;div class=&quot;igtranslator-activator-icon&quot; style=&quot;background-image: url(&amp;quot;resource://jid1-dgnibwqga0sibw-at-jetpack/igtranslator/data/content_script/icon.png&amp;quot;); display: none;&quot; title=&quot;Click to Show Translation&quot;&gt;&lt;/div&gt;&lt;iframe class=&quot;igtranslator-iframe&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;about:blank&quot; style=&quot;display: none; height: 0px; width: 0px;&quot;&gt;&lt;/iframe&gt;&lt;div class=&quot;igtranslator-activator-icon&quot; style=&quot;background-image: url(&amp;quot;resource://jid1-dgnibwqga0sibw-at-jetpack/igtranslator/data/content_script/icon.png&amp;quot;); display: none;&quot; title=&quot;Click to Show Translation&quot;&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Django: using a Model from an app as a Foriegn Key to another app's model</title>
   <link href="http://praba230890.github.io/2015/03/30/django-using-model-from-app-as-foriegn/"/>
   <updated>2015-03-30T12:08:00+05:30</updated>
   <id>http://praba230890.github.io/2015/03/30/django-using-model-from-app-as-foriegn</id>
   <content type="html">&lt;span style=&quot;color: #274e13;&quot;&gt;Rich&lt;/span&gt; is a model in an app named &lt;span style=&quot;color: #274e13;&quot;&gt;strain&lt;/span&gt;. I have another app in the same Django project called &lt;span style=&quot;color: #274e13;&quot;&gt;grain&lt;/span&gt; which has a model named &lt;span style=&quot;color: #274e13;&quot;&gt;Poor&lt;/span&gt;. I now want to use the model &lt;span style=&quot;color: #274e13;&quot;&gt;Rich&lt;/span&gt; as a foreign key to the &lt;span style=&quot;color: #274e13;&quot;&gt;Poor&lt;/span&gt; model.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;We shouldn't import the model directly as it will lead to circular import dependency.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;A short note on circular import dependency:&lt;/b&gt;&lt;br /&gt;Lets assume that we have two modules in a same directory each importing each other.&lt;br /&gt;&lt;br /&gt;module 1 -&amp;gt; a.py&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;from b import dexter&lt;br /&gt;# rest of the file&lt;/blockquote&gt;&lt;br /&gt;module 2 -&amp;gt; b.py&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;import a&lt;br /&gt;&lt;br /&gt;def dexter():&lt;br /&gt;&amp;nbsp; &amp;nbsp; #dexter function&lt;br /&gt;&lt;br /&gt;# rest of the file&lt;/blockquote&gt;If we try to run the b.py module then it will try to import the module a. During the process of import, the a.py will try to import dexter from b.py which in this situation wasn't defined yet as we are still executing the first line of b.py. So no dexter function will be found to import leading to an error.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/models/fields/#lazy-relationships&quot; target=&quot;_blank&quot;&gt;Lazy Relationship&lt;/a&gt; is what we wanted!&lt;/b&gt;&lt;br /&gt;We shouldn't explicitly import the model to avoid circular import problems. &lt;br /&gt;&lt;br /&gt;grain&amp;gt;models.py file&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;&lt;br /&gt;class Poor(models.model):&lt;br /&gt;&amp;nbsp; &amp;nbsp; rich = models.ForeignKey('grain.Rich') &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; # remaining of the class&lt;/blockquote&gt;&lt;br /&gt;This simply solves our problem.&lt;br /&gt;&lt;br /&gt;If we already have a &lt;span style=&quot;color: #274e13;&quot;&gt;Poor&lt;/span&gt; and &lt;span style=&quot;color: #274e13;&quot;&gt;Rich&lt;/span&gt; models with data in them we should take care of them first before migrating our database to new changes.&lt;br /&gt;&lt;div class=&quot;igtranslator-activator-icon&quot; style=&quot;background-image: url(&amp;quot;resource://jid1-dgnibwqga0sibw-at-jetpack/igtranslator/data/content_script/icon.png&amp;quot;); display: none; left: 627px; top: 234px;&quot; title=&quot;Click to Show Translation&quot;&gt;&lt;/div&gt;&lt;iframe class=&quot;igtranslator-iframe&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;about:blank&quot; style=&quot;display: none; height: 0px; width: 0px;&quot;&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;div class=&quot;igtranslator-activator-icon&quot; style=&quot;background-image: url(&amp;quot;resource://jid1-dgnibwqga0sibw-at-jetpack/igtranslator/data/content_script/icon.png&amp;quot;); display: block; left: 266px; top: 892px;&quot; title=&quot;Click to Show Translation&quot;&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Fork and sync a project from Github</title>
   <link href="http://praba230890.github.io/2015/01/17/fork-and-sync-project-from-github/"/>
   <updated>2015-01-17T18:26:00+05:30</updated>
   <id>http://praba230890.github.io/2015/01/17/fork-and-sync-project-from-github</id>
   <content type="html">Forking a Github project is very easy as it is 1-click work, if that project is in public domain. Then cloning the forked project again is very easy with the git clone [$ git clone&amp;nbsp; https://github.com/user/project.git] command. Even, the non git users of a large volume might have used the above command for various reasons.&lt;br /&gt;&lt;br /&gt;After a [few] commit[s], if we think that the cloned/forked copy of the main project is solving any issues or adding any new compelling feature [after running all the necessary tests] then making a pull request is also 1-click [followed by a few clicks] work.&lt;br /&gt;&lt;br /&gt;&amp;nbsp;In pull request, our modifications or code additions will be reviewed [best place to learn things] and any more modifications necessary will be pointed out to us. The chances are there even to get our &lt;a href=&quot;https://help.github.com/articles/closing-a-pull-request/&quot; target=&quot;_blank&quot;&gt;pull request closed &lt;/a&gt;as someone else might have made a pull request that solved the issue in a better way than yours or due to million other reasons.&lt;br /&gt;&lt;br /&gt;No matter what, I wanted to have my forked project in sync with the original [upstream] project and so does many developers. Here came the need for me to get to know about 'remote' [1]. So I did.&lt;br /&gt;&lt;br /&gt;First checking remotes if any exists with the current repo.&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #3d85c6;&quot;&gt;$ &lt;span class=&quot;command&quot;&gt;git remote -v&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;If the upstream or the original repo from which the project have been clone wasn't present then add it [2],&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span class=&quot;command&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #3d85c6;&quot;&gt;&lt;span class=&quot;command&quot;&gt;$ git remote add upstream https://github.com/&lt;i&gt;ORIGINAL_OWNER&lt;/i&gt;/&lt;i&gt;ORIGINAL_REPOSITORY&lt;/i&gt;.git&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;u&gt;&lt;span class=&quot;command&quot;&gt;Method: 1&amp;nbsp;&lt;/span&gt;&lt;/u&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;Then do fetch the latest changes from the upstream&lt;/span&gt;&lt;span class=&quot;command&quot;&gt;&lt;span class=&quot;command&quot;&gt; [3]&lt;/span&gt;,&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #3d85c6;&quot;&gt;&lt;span class=&quot;command&quot;&gt;$ git fetch upstream&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;merge them with the local repo [it is advised to push/pull the local repo with your own remote repo and have them in sync before syncing with upstream]&amp;nbsp; and resolve any conflicts if exists.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #3d85c6;&quot;&gt;&lt;span class=&quot;command&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;command&quot;&gt;git checkout master&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #3d85c6;&quot;&gt;&lt;span class=&quot;command&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;command&quot;&gt;git merge upstream/master&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;u&gt;Method: 2 [4] &lt;/u&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #3d85c6;&quot;&gt;&lt;span class=&quot;command&quot;&gt;$ git pull upstream master&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;command&quot;&gt;&lt;b&gt;pull&lt;/b&gt; does both the &lt;b&gt;fetch&lt;/b&gt; and &lt;b&gt;merge&lt;/b&gt; at a single step. Then do,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;color: #3d85c6;&quot;&gt;&lt;span class=&quot;command&quot;&gt;$ git push origin&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;command&quot;&gt;to sync with your very own remote branch.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;command&quot;&gt;References:&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;[1] https://help.github.com/categories/managing-remotes/ &lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;[2] https://help.github.com/articles/configuring-a-remote-for-a-fork/&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;[3] https://help.github.com/articles/syncing-a-fork/&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt;[4] http://stackoverflow.com/a/4936482&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;command&quot;&gt; &lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content>
 </entry>
 
 <entry>
   <title>Django (Python): RuntimeWarning: SQLite received a naive datetime while time zone support is active</title>
   <link href="http://praba230890.github.io/2014/05/27/django-python-runtimewarning-sqlite/"/>
   <updated>2014-05-27T03:53:00+05:30</updated>
   <id>http://praba230890.github.io/2014/05/27/django-python-runtimewarning-sqlite</id>
   <content type="html">&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Problem&lt;/b&gt;: when running the command,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394; color: white;&quot;&gt;C:\Users\What\Dropbox\Django\mysite&amp;gt;python manage.py shell&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;encountered a warning followed by a lengthy traceback from Python interpreter:&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394; color: white;&quot;&gt;C:\python27\lib\site-packages\django\db\backends\sqlite3\base.py:58: RuntimeWarning: SQLite received a naive datetime (2014-05-27 02:45:18.709000) while time zone support is active.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394;&quot;&gt;&lt;span style=&quot;color: white;&quot;&gt;....&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394;&quot;&gt;&lt;span style=&quot;color: white;&quot;&gt;.....&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394;&quot;&gt;&lt;span style=&quot;color: white;&quot;&gt;....&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;b&gt;Solution that worked for me&lt;/b&gt;: Opened the settings.py file from the current project and replaced the TIME_ZONE variable,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394; color: white;&quot;&gt;TIME_ZONE = 'UTC'&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;to&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394; color: white;&quot;&gt;TIME_ZONE = timezone.now()&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;and added the line&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;span style=&quot;background-color: #6fa8dc;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #0b5394; color: white;&quot;&gt;from django.utils import timezone&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;background-color: #0b5394; color: white;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;at the top of the file to import the timezone.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Fedora: Git cloning Problem (Github) in proxy connection</title>
   <link href="http://praba230890.github.io/2014/03/31/git-cloning-problem-github-in-proxy/"/>
   <updated>2014-03-31T23:49:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/31/git-cloning-problem-github-in-proxy</id>
   <content type="html">&lt;div style=&quot;text-align: justify;&quot;&gt;Today after installing &lt;a href=&quot;http://spins.fedoraproject.org/scientific-kde/%E2%80%8E&quot; target=&quot;_blank&quot;&gt;Fedora Scientific&lt;/a&gt;, I decided to master Unix type OS and then Git (which I wanted to learn for the last couple of years but had no time). I'm accessing Internet through our college connection which needs proxy to be configured. So, I configured the proxy on Fedora and then Firefox to access this awesome book &lt;a href=&quot;http://www.git-scm.com/book&quot; target=&quot;_blank&quot;&gt;Pro Git&lt;/a&gt;.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Then as per the &lt;a href=&quot;http://www.git-scm.com/book/en/Git-Basics-Getting-a-Git-Repository&quot; target=&quot;_blank&quot;&gt;author said &lt;/a&gt;I tried to clone &lt;a href=&quot;https://github.com/schacon/grit&quot; target=&quot;_blank&quot;&gt;this project&lt;/a&gt;&amp;nbsp;from GitHub and ended up with an error message. I already had this kind of proxy related mess on Ruby on Rails in Windows, but here in Fedora! I don't know? I first thought. But it was frickin easy to rectify this proxy problem (after a few minutes googling) as I executed this command,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;$ git config --global http.proxy '172.16.0.18:8080'&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;prior to executing the&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;$ git clone&amp;nbsp;https://github.com/schacon/grit&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Problem solved. Connection was established and cloning was&amp;nbsp;successful.&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Starting/running two or more programs using a single batch file</title>
   <link href="http://praba230890.github.io/2014/03/19/startingrunning-two-or-more-programs/"/>
   <updated>2014-03-19T23:49:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/19/startingrunning-two-or-more-programs</id>
   <content type="html">My problem:&lt;br /&gt;1. Need to start Wamp server (my lazy ass is using mysql from it)&lt;br /&gt;2. Then need to open a command prompt, point it to a particular directory where my rails project is located and run the command&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;mongrel_rails start&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;to start the rails environment.&lt;br /&gt;3. Then finally need to start a browser and point it to local host and the particular port at which the app is listening.&lt;br /&gt;&lt;br /&gt;What I did (might be lame):&lt;br /&gt;I have no problem doing the above steps to access the app, but my boss doesn't. All he needed is an icon which when he click would do all the above for him. No problem, right! Because, we have the beautiful batch files that could do the above tasks for us when got clicked. So I started writing a batch file. It goes like this(which I think is self explanatory),&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;@ECHO OFF&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;START C:\wamp\wampmanager.exe&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;start cmd /c &quot;cd c:\project &amp;amp;&amp;amp; mongrel_rails start &amp;amp;&amp;amp; pause&quot;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;cd C:\ProgramFiles(x86)\Google\Chrome\Application&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;start chrome.exe http://127.0.0.1:3000&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;sleep1&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;exit&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;which I saved as filename.bat on desktop. Double clicked it: problem solved.</content>
 </entry>
 
 <entry>
   <title>Running .sh files on windows using Cygwin</title>
   <link href="http://praba230890.github.io/2014/03/18/running-sh-files-on-windows-using-cygwin/"/>
   <updated>2014-03-18T02:30:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/18/running-sh-files-on-windows-using-cygwin</id>
   <content type="html">Never heard of Cygwin before? No probs, just download the &lt;a href=&quot;http://cygwin.com/install.html&quot; target=&quot;_blank&quot;&gt;Cygwin installer &lt;/a&gt;and run it. Once the Cygwin is installed open the Cygwin terminal. Now just using the path of sh.exe located in 'C:\cygwinXX\bin\sh.exe' and the path of your .sh file you could simply run the file using the command:&lt;br /&gt;&lt;br /&gt;&lt;div&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;c:/cygwin64/bin/sh.exe C:/wamp/www/SMIP_Install_v1_1/install.sh&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It will run your .sh file. Note: just check the '/' you use in the path. Don't use '\' but '/' (not windows but UNIX).&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Solution to "The bundled mysql.rb driver has been removed from Rails 2.2. Please install the mysql gem and try again: gem install mysql. rake aborted! no such file to load -- mysql/mysql_api"</title>
   <link href="http://praba230890.github.io/2014/03/15/solution-to-bundled-mysqlrb-driver-has/"/>
   <updated>2014-03-15T20:25:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/15/solution-to-bundled-mysqlrb-driver-has</id>
   <content type="html">I tried &lt;a href=&quot;http://projectfedena.org/install&quot; target=&quot;_blank&quot;&gt;installing Fedena &lt;/a&gt;this evening. While going through the fifth step i,e executing the command&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;rake db:create&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;on my command prompt I ended up with this error message &quot;&lt;span style=&quot;color: red;&quot;&gt;!!! The bundled mysql.rb driver has been removed from Rails 2.2. Please install the mysql gem and try again: gem install mysql. rake aborted! no such file to load -- mysql/mysql_api&lt;/span&gt;&quot;. I tried a lot of websites for a solution and ended up smoking three cigarettes in a row and of course with no solution.&lt;br /&gt;&lt;br /&gt;Then after an episode of 'House of cards', I again checked back the error and tried the command&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8; font-family: '';&quot;&gt;gem install mysql&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: '';&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: '';&quot;&gt;which I did tried three or four times before but neglected the description it gave me. It said the mysql connector was installed successfully but the version might change so get the libmysql.dll from the location it downloaded (for me it is,&amp;nbsp;&lt;/span&gt;http://cdn.mysql.com/Downloads/Connector-C/mysql-connector-c-noinstall-6.0.2-win32.zip&lt;span style=&quot;font-family: '';&quot;&gt;) the connector into C:\ruby\bin (bin folder in your ruby installation).&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: '';&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: '';&quot;&gt;Then reluctantly I copied the above url and downloaded the zip file. From the zip I extracted the libmysql.dll (\lib\libmysql.dll) file into the config folder in Fedena directory and replaced the already existing file. That's it. Then the command&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;background-color: #9fc5e8; font-family: '';&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;background-color: #9fc5e8; font-family: '';&quot;&gt;rake db:create&lt;/span&gt;&lt;br /&gt;worked smoothly and I continued installing Fedena successfully.</content>
 </entry>
 
 <entry>
   <title>Can't install Composer although openssl extension enabled in Wamp!</title>
   <link href="http://praba230890.github.io/2014/03/15/cant-install-composer-although-openssl/"/>
   <updated>2014-03-15T01:02:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/15/cant-install-composer-although-openssl</id>
   <content type="html">I tried installing &lt;a href=&quot;https://getcomposer.org/download/&quot; target=&quot;_blank&quot;&gt;Composer&amp;nbsp;&lt;/a&gt;which irritated me at first by telling me to enable the openssl extension and recompile my PHP. I always use Wamp on my home computer, which told me that openssl was installed and active (wamp-&amp;gt; php -&amp;gt; php extensions).&lt;br /&gt;&lt;br /&gt;I tried for a few times, disabling and enabling openssl and restarting all services every time. Still ended up with the same error, irritated me more. Then had a smoke and while doing so, my hand guided my computer to the directory where php.ini (in ../wamp/bin/php.phpx.x.xx/) file was located, opened it and searched for openssl. There I found a line 'extension=php_openssl.dll', as a comment.&lt;br /&gt;&lt;br /&gt;I uncommented the line, saved the file and restarted all services on Wamp. Waited for a few seconds and ran the composer setup to witness it installing without any trouble. It was an emotional moment for me.&lt;br /&gt;&lt;br /&gt;Now, why I installed Composer for! I don't know. I've got to go figure it out now. my ass!</content>
 </entry>
 
 <entry>
   <title>Did simple Django installation on Windows (Python)!</title>
   <link href="http://praba230890.github.io/2014/03/15/did-simple-django-installation-on/"/>
   <updated>2014-03-15T00:32:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/15/did-simple-django-installation-on</id>
   <content type="html">&lt;div style=&quot;text-align: justify;&quot;&gt;Today I downloaded some apps that were build on Django. At first I thought it's gonna be a pain in my ass to set up Django and then configure those apps, even to have a glimpse of how they look and work. But I was wrong. I already had &lt;a href=&quot;http://www.python.org/download/&quot; target=&quot;_blank&quot;&gt;Python &lt;/a&gt;installed on my computer. So I followed the below steps:&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Step 1: Went to &lt;a href=&quot;https://www.djangoproject.com/download/&quot; target=&quot;_blank&quot;&gt;Django official download page&lt;/a&gt;,&amp;nbsp;downloaded&amp;nbsp;&lt;a href=&quot;https://www.djangoproject.com/download/1.6.2/tarball/&quot; style=&quot;background-color: white; font-family: Verdana, sans-serif; font-size: 12px; line-height: 16.799999237060547px; margin-left: 0px; margin-right: 0px;&quot;&gt;&lt;span style=&quot;color: blue;&quot;&gt;Django-1.6.2.tar.gz&lt;/span&gt;&lt;/a&gt;&amp;nbsp;and unzipped it into a local folder named 'Django'.&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Step 2: Opened command prompt and headed to the local folder 'Django' (C:\Users\userX\Documents\Django).&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Step 3: ran the command,&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;python&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&amp;nbsp;setup.py install&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;which made the command prompt go crazy while I sat in front of my computer feeling like a nerd.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;b&gt;Note&lt;/b&gt;: If you encountered the error, '&lt;span style=&quot;color: red;&quot;&gt;python' is not recognized as an internal or external command,&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;span style=&quot;color: red;&quot;&gt;operable program or batch file,&amp;nbsp;&lt;/span&gt;in this step, then add&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color: #073763;&quot;&gt;C:\PythonXX\;C:\PythonXX\Scripts;&lt;/span&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&amp;nbsp;(XX is version of your python like python27 or python33 and so) to your PATH environment variable (system-&amp;gt; advanced sys settings -&amp;gt; environment variables -&amp;gt; PATH-&amp;gt; edit).&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;Step 4: Once my command prompt came to rest, I typed 'python' and hit enter to turn it into Python interpreter. Then tried importing django (import django) and checked its version (&lt;/span&gt;print(django.get_version())&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;). Success!&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;Step 5: Typed 'ctrl+c' to bounce back to command prompt from interpreter. Then I created an another local directory to create a sample app, took the command prompt to it and entered the command,&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #9fc5e8;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;python C:\python27\Scripts\django-admin.py&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;startproject myapp_sample&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;to finally check every thing's alright and it was, surprisingly&lt;/span&gt;&lt;span style=&quot;line-height: 16.796875px;&quot;&gt;.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>pyQt: ui file to py file conversion in windows</title>
   <link href="http://praba230890.github.io/2014/03/13/pyqt-ui-file-to-py-file-conversion-in/"/>
   <updated>2014-03-13T04:49:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/13/pyqt-ui-file-to-py-file-conversion-in</id>
   <content type="html">&lt;div style=&quot;text-align: justify;&quot;&gt;Once the anyfile.ui file is saved then it could be converted into anyfile.py file using uic.py script.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Step 1: Download and install &lt;a href=&quot;https://qt-project.org/wiki/PySide&quot; target=&quot;_blank&quot;&gt;PySide&lt;/a&gt;.&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Step 2: Open your command prompt and head to the directory where the installed PySide scripts were located on your computer like in mine, C:\Python27\Lib\site-packages\PySide\scripts&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Step 3: Now type the command '&lt;span class=&quot;pln&quot;&gt;python uic&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;py input&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;ui &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;o output&lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;py &lt;/span&gt;&lt;span class=&quot;pun&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pln&quot;&gt;x', in which you have to only change the input and output file names. For me this command worked '&lt;/span&gt;C:\Python27\Lib\site-packages\PySide\scripts&amp;gt;python uic.py D:\PyEx\sam.ui -o D:\PyEx\output.py -x'&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Note: It would be easier if the ui file to be converted is saved in the same directory as the uic.py file.&lt;/div&gt;&lt;div style=&quot;text-align: justify;&quot;&gt;Step 4: Open, run and verify the output py file and have a self five.&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Grabbing screen size in wxPython</title>
   <link href="http://praba230890.github.io/2014/03/11/grabbing-screen-size-in-wxpython/"/>
   <updated>2014-03-11T12:27:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/11/grabbing-screen-size-in-wxpython</id>
   <content type="html">&amp;gt;&amp;gt;import wx&lt;br /&gt;&amp;gt;&amp;gt;screen_size = wx.DisplaySize()&lt;br /&gt;&amp;gt;&amp;gt;print (screen_size)&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;gt;(width, height)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content>
 </entry>
 
 <entry>
   <title>Problem installing WAMP on Windows 8.1!</title>
   <link href="http://praba230890.github.io/2014/03/06/problem-installing-wamp-on-windows-81/"/>
   <updated>2014-03-06T07:34:00+05:30</updated>
   <id>http://praba230890.github.io/2014/03/06/problem-installing-wamp-on-windows-81</id>
   <content type="html">I just updated to Windows 8.1 from 8 and installed Wamp server. At first, Wamp is not working. I mean, I can't open the localhost or any other services from Wamp. So I queried Google and tried installing apache (click Wamp -&amp;gt; Apache -&amp;gt; service -&amp;gt; install service) and mysql&amp;nbsp;&lt;span style=&quot;font-family: '';&quot;&gt;(click Wamp -&amp;gt; MySql-&amp;gt; service -&amp;gt; install service)&amp;nbsp;&lt;/span&gt;service. That's it, everything works.&lt;br /&gt;&lt;br /&gt;Then I tried the phpmyadmin page but it asked me password like it did the last time. I saved some instructions in my evernote about it once, but I was too fuckin' lazy to go through that shit. So I opened the mysql console and typed:&lt;br /&gt;show databases;&lt;br /&gt;use mysql;&lt;br /&gt;from table user show *;&lt;br /&gt;&lt;br /&gt;which gave me the username - 'root' and password - ''(blank), using which I used to logged in to my phpmyadmin. But my lazy ass forgot to think about something. I don't want to go through the login page every time on my local server, so all I need is to disable the login page and save me some overhead. So again I went back to my evernote shits. Then I edited (from dir:root/wamp/apps/phpmyadmin/config.inc.php ) the line:&lt;br /&gt;&lt;br /&gt;/* Authentication type */&lt;br /&gt;$cfg['Servers'][$i]['auth_type'] = 'cookie';&lt;br /&gt;&lt;br /&gt;&amp;nbsp;to&lt;br /&gt;&lt;br /&gt;/* Authentication type */&lt;br /&gt;$cfg['Servers'][$i]['auth_type'] = 'config';&lt;br /&gt;&lt;br /&gt;Which solved my problem, adios!&lt;br /&gt;&lt;br /&gt;Resources that might have helped me:&lt;br /&gt;http://forum.wampserver.com/read.php?2,116611&lt;br /&gt;http://www.ntu.edu.sg/home/ehchua/programming/howto/WampServer_HowTo.html&lt;br /&gt;&lt;br /&gt;This helps too:&lt;br /&gt;http://stackoverflow.com/questions/273159/how-to-determine-if-a-port-is-open-on-a-windows-server&lt;br /&gt;http://dev.mysql.com/doc/refman/5.0/en/resetting-permissions.html&lt;br /&gt;&lt;br /&gt;</content>
 </entry>
 

</feed>
